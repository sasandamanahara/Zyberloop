{"version":3,"file":"static/js/411.4ce6e873.chunk.js","mappings":"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","sources":["component/Navbar/Scrollspy.js","component/Navbar/NavBar.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass scrollSpy extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.props = props;\r\n        this.scrollTargetIds = this.props.scrollTargetIds;\r\n        this.activeNavClass = this.props.activeNavClass;\r\n        this.scrollDuration = Number(this.props.scrollDuration) || 1000;\r\n        this.headerBackground = this.props.headerBackground === \"true\" ? true : false;\r\n\r\n        if (this.props.router && this.props.router === \"HashRouter\") {\r\n            this.homeDefaultLink = \"#/\";\r\n            this.hashIdentifier = \"#/#\";\r\n        } else {\r\n            this.homeDefaultLink = \"/\";\r\n            this.hashIdentifier = \"#\";\r\n        }\r\n        this.scrollSection.bind(this);\r\n    }\r\n\r\n    easeInOutQuad(current_time, start, change, duration) {\r\n        current_time /= duration / 2;\r\n        if (current_time < 1) return change / 2 * current_time * current_time + start;\r\n        current_time--;\r\n        return -change / 2 * (current_time * (current_time - 2) - 1) + start;\r\n    };\r\n\r\n    scrollTo(start, to, duration) {\r\n        let change = to - start,\r\n            currentTime = 0,\r\n            increment = 10;\r\n\r\n        let animateScroll = () => {\r\n            currentTime += increment;\r\n            let val = this.easeInOutQuad(currentTime, start, change, duration);\r\n            window.scrollTo(0, val);\r\n            if (currentTime < duration) {\r\n                setTimeout(animateScroll, increment);\r\n            }\r\n        };\r\n\r\n        animateScroll();\r\n    }\r\n\r\n    getNavLinkElement(sectionID) {\r\n        return document.querySelector(`a[href='${this.hashIdentifier}${sectionID}']`);\r\n    }\r\n\r\n    getNavToSectionID(navHref) {\r\n        return navHref.includes(this.hashIdentifier) ? navHref.replace(this.hashIdentifier, \"\") : \"\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (document.querySelector(`a[href='${this.homeDefaultLink}']`)) {\r\n            document.querySelector(`a[href='${this.homeDefaultLink}']`).addEventListener(\"click\", (event) => {\r\n                event.preventDefault();\r\n                this.scrollTo(window.pageYOffset, 0, this.scrollDuration);\r\n                window.location.hash = \"\";\r\n            });\r\n        }\r\n\r\n        document.querySelector(\"div[data-nav='list']\").querySelectorAll(\"a\").forEach((navLink) => {\r\n            navLink.addEventListener(\"click\", (event) => {\r\n                event.preventDefault();\r\n                let sectionID = this.getNavToSectionID(navLink.getAttribute(\"href\"));\r\n\r\n                if (sectionID) {\r\n                    let scrollTargetPosition = document.getElementById(sectionID).offsetTop - (this.headerBackground ? document.querySelector(\"div[data-nav='list']\").scrollHeight : 0);\r\n                    this.scrollTo(window.pageYOffset, scrollTargetPosition, this.scrollDuration);\r\n                } else {\r\n                    this.scrollTo(window.pageYOffset, 0, this.scrollDuration);\r\n                }\r\n            });\r\n        })\r\n\r\n        window.addEventListener(\"scroll\", this.scrollSection, true );\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"scroll\", this.scrollSection, true );\r\n    }\r\n    \r\n    scrollSection = () => {\r\n            let scrollSectionOffsetTop;\r\n            this.scrollTargetIds.forEach((sectionID, index) => {\r\n                scrollSectionOffsetTop = document.getElementById(sectionID).offsetTop - (this.headerBackground ? document.querySelector(\"div[data-nav='list']\").scrollHeight : 0);\r\n\r\n                if (window.pageYOffset >= scrollSectionOffsetTop && window.pageYOffset < scrollSectionOffsetTop + document.getElementById(sectionID).scrollHeight) {\r\n                    this.getNavLinkElement(sectionID).classList.add(this.activeNavClass);\r\n                    this.getNavLinkElement(sectionID).parentNode.classList.add(this.activeNavClass);\r\n                    this.clearOtherNavLinkActiveStyle(sectionID)\r\n                } else {\r\n                    this.getNavLinkElement(sectionID).classList.remove(this.activeNavClass);\r\n                    this.getNavLinkElement(sectionID).parentNode.classList.remove(this.activeNavClass);\r\n                }\r\n\r\n                if (window.innerHeight + window.pageYOffset >= document.body.scrollHeight && index === this.scrollTargetIds.length - 1) {\r\n                    this.getNavLinkElement(sectionID).classList.add(this.activeNavClass);\r\n                    this.getNavLinkElement(sectionID).parentNode.classList.add(this.activeNavClass);\r\n                    this.clearOtherNavLinkActiveStyle(sectionID);\r\n                }\r\n            });\r\n    }\r\n    clearOtherNavLinkActiveStyle(excludeSectionID) {\r\n        this.scrollTargetIds.forEach((sectionID, index) => {\r\n            if (sectionID !== excludeSectionID) {\r\n                this.getNavLinkElement(sectionID).classList.remove(this.activeNavClass);\r\n                this.getNavLinkElement(sectionID).parentNode.classList.remove(this.activeNavClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div data-nav=\"list\" className={this.props.className}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default scrollSpy;","// Import anchor tag instead of Link\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavbarToggler,\r\n  NavItem,\r\n  NavLink,\r\n  Container,\r\n  Collapse\r\n} from \"reactstrap\";\r\nimport FeatherIcon from \"feather-icons-react\";\r\nimport ScrollspyNav from \"./Scrollspy\";\r\n\r\n// Import Logo\r\nimport logodark from \"../../assets/images/logo-dark.png\";\r\nimport logolight from \"../../assets/images/logo-light.png\";\r\n\r\nclass NavbarPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpenMenu: false,\r\n    };\r\n    // Binding toggle method\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  // Toggle method to handle NavbarToggler click\r\n  toggle() {\r\n    this.setState({ isOpenMenu: !this.state.isOpenMenu });\r\n  }\r\n\r\n  render() {\r\n    let targetId = this.props.navItems.map((item) => {\r\n      return item.idnm;\r\n    });\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n          <Navbar\r\n            expand=\"lg\"\r\n            fixed={this.props.top === true ? \"top\" : \"\"}\r\n            className={this.props.navClass + \" fixed-top navbar-custom sticky sticky-dark align-items-center\"}\r\n            id=\"navbar\"\r\n            container\r\n          >\r\n            <a className=\"logo me-3\" href=\"/\"> {/* Changed Link to <a> */}\r\n              {this.props.imglight === true ? (\r\n                <img src={logolight} alt=\"\" height=\"30\" />\r\n              ) : (\r\n                <img src={logodark} alt=\"\" height=\"30\" />\r\n              )}\r\n            </a>\r\n            <NavbarToggler onClick={this.toggle}>\r\n              <span className=\"ti-menu\"></span>\r\n            </NavbarToggler>\r\n            <Collapse\r\n              id=\"navbarCollapse\"\r\n              isOpen={this.state.isOpenMenu}\r\n              className=\" navbar-collapse\"\r\n            >\r\n              <ScrollspyNav\r\n                scrollTargetIds={targetId}\r\n                scrollDuration=\"800\"\r\n                headerBackground=\"true\"\r\n                activeNavClass=\"active\"\r\n                className=\"navbar-collapse\"\r\n              >\r\n                <Nav className=\"navbar-nav navbar-center\" id=\"navbar-navlist\">\r\n                  {this.props.navItems.map((item, key) => (\r\n                    <NavItem\r\n                      key={key}\r\n                      className={item.navheading === \"Home\" ? \"active\" : \"\"}\r\n                    >\r\n                      <NavLink\r\n                        className={item.navheading === \"Home\" ? \"active\" : \"\"}\r\n                        href={\"#\" + item.idnm}\r\n                      >\r\n                        {item.navheading}\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  ))}\r\n                </Nav>\r\n                <ul className=\"list-inline ml-auto menu-social-icon mb-0 py-2 py-lg-0\">\r\n                  <li className=\"list-inline-item ml-0\">\r\n                    <a href=\"https://web.facebook.com/zyberloop\" className=\"menu-social-link\" target=\"_blank\">\r\n                      <FeatherIcon icon=\"facebook\" className=\"icon-xs sw_1-5\" />\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"list-inline-item\">\r\n                    <a href=\"https://www.instagram.com/zyberloop\" className=\"menu-social-link\">\r\n                      <FeatherIcon icon=\"instagram\" className=\"icon-xs sw_1-5\" />\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"list-inline-item mr-0\">\r\n                    <a href=\"https://www.linkedin.com/company/101731208/\" className=\"menu-social-link\">\r\n                      <FeatherIcon icon=\"linkedin\" className=\"icon-xs sw_1-5\" />\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </ScrollspyNav>\r\n            </Collapse>\r\n          </Navbar>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;\r\n"],"names":["scrollSpy","Component","constructor","props","super","scrollSection","scrollSectionOffsetTop","this","scrollTargetIds","forEach","sectionID","index","document","getElementById","offsetTop","headerBackground","querySelector","scrollHeight","window","pageYOffset","getNavLinkElement","classList","add","activeNavClass","parentNode","clearOtherNavLinkActiveStyle","remove","innerHeight","body","length","scrollDuration","Number","router","homeDefaultLink","hashIdentifier","bind","easeInOutQuad","current_time","start","change","duration","scrollTo","to","currentTime","animateScroll","val","setTimeout","concat","getNavToSectionID","navHref","includes","replace","componentDidMount","addEventListener","event","preventDefault","location","hash","querySelectorAll","navLink","getAttribute","scrollTargetPosition","componentWillUnmount","removeEventListener","excludeSectionID","render","_jsx","className","children","NavbarPage","state","isOpenMenu","toggle","setState","targetId","navItems","map","item","idnm","React","Container","_jsxs","Navbar","expand","fixed","top","navClass","id","container","href","imglight","src","logolight","alt","height","logodark","NavbarToggler","onClick","Collapse","isOpen","ScrollspyNav","Nav","key","NavItem","navheading","NavLink","target","FeatherIcon","icon"],"sourceRoot":""}